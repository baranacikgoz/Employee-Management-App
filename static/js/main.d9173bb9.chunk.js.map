{"version":3,"sources":["components/NavbarC.js","components/JumbotronComp.js","pages/HomePage.js","context.js","forms/AddUser.js","pages/AddPage.js","components/ListItemC.js","components/Users.js","components/BottomAdd.js","pages/UsersPage.js","pages/UpdateUser.js","App.js","serviceWorker.js","index.js"],"names":["NavbarC","Container","className","style","marginBottom","Navbar","bg","variant","Brand","href","Nav","to","Component","JumbotronComp","Jumbotron","fluid","Button","size","HomePage","UserContext","React","createContext","reducer","state","action","type","users","filter","user","payload","id","map","UserProvider","dispatch","setState","componentDidMount","a","axios","get","response","data","Provider","value","this","props","children","UserConsumer","Consumer","AddUser","visible","name","jobTitle","salary","changeVisibility","addUser","e","preventDefault","newUser","post","addName","target","addJob","addSalary","Card","Header","Row","Text","as","onClick","Body","Form","onSubmit","bind","Group","onChange","controlId","Label","Control","placeholder","Col","md","InputGroup","aria-describedby","required","Prepend","AddPage","marginTop","ListItemC","deleteUser","console","log","delete","Users","Table","responsive","bordered","hover","key","BottomAdd","backgroundColor","UsersPage","UpdateUser","match","params","updateUser","updatedUser","put","htmlFor","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"8SA0BeA,E,uKApBX,OACE,kBAACC,EAAA,EAAD,CAAWC,UAAU,kBAAkBC,MAAO,CAAEC,aAAc,SAC5D,kBAACC,EAAA,EAAD,CAAQH,UAAU,YAAYI,GAAG,UAAUC,QAAQ,QACjD,kBAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,KAAnB,2BACA,kBAACC,EAAA,EAAD,CAAKR,UAAU,WACb,kBAAC,IAAD,CAAMA,UAAU,sBAAsBS,GAAG,KAAzC,QAGA,kBAAC,IAAD,CAAMT,UAAU,sBAAsBS,GAAG,YAAzC,YAGA,kBAAC,IAAD,CAAMT,UAAU,sBAAsBS,GAAG,UAAzC,4B,GAbUC,a,wBCePC,E,uKAdP,OACI,kBAACC,EAAA,EAAD,CAAWC,OAAK,EAACb,UAAU,eAC3B,8EACA,8GAGA,2BACI,kBAACc,EAAA,EAAD,CAAQC,KAAK,KAAKR,KAAK,mCAAkC,uBAAGP,UAAU,+B,GAT1DU,aCWbM,E,uKARX,OACA,yBAAKhB,UAAU,WACb,kBAAC,EAAD,W,GAJiBU,a,kGCDjBO,EAAcC,IAAMC,gBAGpBC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,cACH,OAAO,eACFF,EADL,CAEEG,MAAOH,EAAMG,MAAMC,QAAO,SAACC,GAAD,OAAUJ,EAAOK,UAAYD,EAAKE,QAEhE,IAAK,WACH,OAAO,eACFP,EADL,CAEEG,MAAM,GAAD,mBAAMH,EAAMG,OAAZ,CAAmBF,EAAOK,YAEjC,IAAK,cACH,sBACKN,EADL,CAEEG,MAAQH,EAAMG,MAAMK,KAAI,SAAAH,GAAI,OAAGA,EAAKE,KAAON,EAAOK,QAAUL,EAAOK,QAAUD,OAGnF,QACE,OAAOL,IAIAS,EAAb,4MACET,MAAQ,CACNG,MAAO,GACPO,SAAU,SAACT,GACT,EAAKU,UAAS,SAACX,GAAD,OAAWD,EAAQC,EAAOC,QAJ9C,EAQEW,kBARF,sBAQsB,4BAAAC,EAAA,sEACKC,IAAMC,IAAI,+BADf,OACZC,EADY,OAElB,EAAKL,SAAS,CACZR,MAAOa,EAASC,OAHA,2CARtB,uDAgBI,OACE,kBAACrB,EAAYsB,SAAb,CAAsBC,MAAOC,KAAKpB,OAC/BoB,KAAKC,MAAMC,cAlBpB,GAAkCjC,aAyBnBkC,EAFM3B,EAAY4B,SC0FlBC,E,4MAxIbzB,MAAQ,CACN0B,SAAS,EACTC,KAAM,GACNC,SAAU,GACVC,OAAQ,I,EAGVC,iBAAmB,WACjB,EAAKnB,SAAS,CACZe,SAAU,EAAK1B,MAAM0B,W,EAIzBK,Q,uCAAU,WAAOrB,EAAUsB,GAAjB,yBAAAnB,EAAA,6DACRmB,EAAEC,iBADM,EAEuB,EAAKjC,MAA7B2B,EAFC,EAEDA,KAAKC,EAFJ,EAEIA,SAASC,EAFb,EAEaA,OACfK,EAAU,CACdP,OACAC,WACAC,UANM,SAQWf,IAAMqB,KAAK,8BAA8BD,GARpD,OAQNlB,EARM,OAURN,EAAS,CACPR,KAAM,WACNI,QAASU,EAASC,OAZZ,2C,0DAeVmB,QAAU,SAACJ,GACT,EAAKrB,SAAS,CAAEgB,KAAMK,EAAEK,OAAOlB,S,EAEjCmB,OAAS,SAACN,GACR,EAAKrB,SAAS,CAAEiB,SAAUI,EAAEK,OAAOlB,S,EAErCoB,UAAY,SAACP,GACX,EAAKrB,SAAS,CAAEkB,OAAQG,EAAEK,OAAOlB,S,uDAGzB,IAAD,OACP,OACE,kBAAC,EAAD,MACG,SAACA,GACA,OACE,kBAACzC,EAAA,EAAD,CAAWC,UAAU,YACrB,kBAAC6D,EAAA,EAAD,CAAM7D,UAAU,eACd,kBAAC6D,EAAA,EAAKC,OAAN,CAAalC,GAAG,UACd,6BACE,kBAACmC,EAAA,EAAD,KACE,yBAAK/D,UAAU,wBACb,kBAAC6D,EAAA,EAAKG,KAAN,CAAWC,GAAG,MAAd,kBAEF,yBAAKjE,UAAU,YACb,kBAACc,EAAA,EAAD,CACEoD,QAAS,EAAKf,iBACd9C,QAAQ,kBACRU,KAAK,MAEJ,EAAKM,MAAM0B,QAAU,OAAS,YAMxC,EAAK1B,MAAM0B,QACV,kBAACc,EAAA,EAAKM,KAAN,KACE,kBAACC,EAAA,EAAD,CAAMC,SAAU,EAAKjB,QAAQkB,KAAK,EAAM9B,EAAMT,WAC5C,kBAACqC,EAAA,EAAKG,MAAN,CACE/B,MAAO,EAAKnB,MAAM2B,KAClBwB,SAAU,EAAKf,QACfgB,UAAU,QAEV,kBAACL,EAAA,EAAKM,MAAN,gBACA,kBAACN,EAAA,EAAKO,QAAN,CACEpD,KAAK,OACLqD,YAAY,qBAEd,kBAACR,EAAA,EAAKJ,KAAN,CAAWhE,UAAU,cAArB,2BAKF,kBAACoE,EAAA,EAAKG,MAAN,CACE/B,MAAO,EAAKnB,MAAM4B,SAClBuB,SAAU,EAAKb,OACfc,UAAU,YAEV,kBAACL,EAAA,EAAKM,MAAN,eACA,kBAACN,EAAA,EAAKO,QAAN,CAAcpD,KAAK,OAAOqD,YAAY,iBACtC,kBAACR,EAAA,EAAKJ,KAAN,CAAWhE,UAAU,cAArB,0BAKF,kBAACoE,EAAA,EAAKG,MAAN,CACE/B,MAAO,EAAKnB,MAAM6B,OAClBsB,SAAU,EAAKZ,UACfK,GAAIY,IACJC,GAAG,IACHL,UAAU,UAEV,kBAACL,EAAA,EAAKM,MAAN,kBACA,kBAACK,EAAA,EAAD,KACE,kBAACX,EAAA,EAAKO,QAAN,CACEpD,KAAK,SACLqD,YAAY,OACZI,mBAAiB,oBACjBC,UAAQ,IAEV,kBAACF,EAAA,EAAWG,QAAZ,KACE,kBAACH,EAAA,EAAWf,KAAZ,CAAiBpC,GAAG,qBAApB,SAKJ,kBAACwC,EAAA,EAAKJ,KAAN,CAAWhE,UAAU,cAArB,iCAIF,kBAACc,EAAA,EAAD,CACEd,UAAU,gBACVK,QAAQ,UACRkB,KAAK,UAHP,UASF,c,GAhIIb,aCOPyE,E,uKAPP,OACI,yBAAKlF,MAAO,CAACmF,UAAU,OACnB,kBAAC,EAAD,W,GAJM1E,aCkDP2E,E,4MA/CbC,W,uCAAa,WAAOvD,EAAUsB,GAAjB,eAAAnB,EAAA,6DACHN,EAAO,EAAKc,MAAZd,GAER2D,QAAQC,IAAI5D,GAHD,SAILO,IAAMsD,OAAN,sCAA4C7D,IAJvC,OAMXG,EAAS,CACPR,KAAM,cACNI,QAASC,IARA,2C,+GAYH,IAAD,OACP,OACE,kBAAC,EAAD,MACG,SAACY,GACA,OACE,4BACE,4BAAK,EAAKE,MAAMd,IAChB,4BAAK,EAAKc,MAAMM,MAChB,4BAAK,EAAKN,MAAMO,UAChB,4BAAK,EAAKP,MAAMQ,QAChB,4BACE,kBAAC,IAAD,CACElD,UAAU,kBACVS,GAAE,mBAAc,EAAKiC,MAAMd,KAE3B,uBAAG5B,UAAU,uBAGjB,4BACE,kBAACc,EAAA,EAAD,CACEoD,QAAS,EAAKoB,WAAWhB,KAAK,EAAM9B,EAAMT,UAC1C1B,QAAQ,UAER,uBAAGL,UAAU,+B,GApCPU,a,QCwCTgF,E,uKAtCX,OACE,kBAAC,EAAD,MACG,SAAClD,GACA,OACE,6BACE,kBAACmD,EAAA,EAAD,CAAOC,YAAU,EAACC,UAAQ,EAACC,OAAK,EAAC9F,UAAU,cAAce,KAAK,MAC5D,+BACE,4BACE,kCACA,oCACA,mCACA,sCACA,yCACA,6CAGJ,+BACGyB,EAAMhB,MAAMK,KAAI,SAACH,GAChB,OACE,kBAAC,EAAD,CACEqE,IAAKrE,EAAKE,GACVA,GAAIF,EAAKE,GACToB,KAAMtB,EAAKsB,KACXC,SAAUvB,EAAKuB,SACfC,OAAQxB,EAAKwB,sB,GA1BjBxC,aCsGLsF,E,4MArGb3E,MAAQ,CACN2B,KAAM,GACNC,SAAU,GACVC,OAAQ,I,EAGVE,Q,uCAAU,WAAOrB,EAAUsB,GAAjB,yBAAAnB,EAAA,6DACRmB,EAAEC,iBADM,EAE2B,EAAKjC,MAAhC2B,EAFA,EAEAA,KAAMC,EAFN,EAEMA,SAAUC,EAFhB,EAEgBA,OAClBK,EAAU,CACdP,OACAC,WACAC,UANM,SAQef,IAAMqB,KAAK,8BAA+BD,GARzD,OAQFlB,EARE,OAURN,EAAS,CACPR,KAAM,WACNI,QAASU,EAASC,OAZZ,2C,0DAeVmB,QAAU,SAACJ,GACT,EAAKrB,SAAS,CAAEgB,KAAMK,EAAEK,OAAOlB,S,EAEjCmB,OAAS,SAACN,GACR,EAAKrB,SAAS,CAAEiB,SAAUI,EAAEK,OAAOlB,S,EAErCoB,UAAY,SAACP,GACX,EAAKrB,SAAS,CAAEkB,OAAQG,EAAEK,OAAOlB,S,uDAEzB,IAAD,OACP,OACE,kBAAC,EAAD,MACG,SAACA,GACA,OAEI,kBAACrC,EAAA,EAAD,CAASH,UAAU,2BAA2BC,MAAO,CAACgG,gBAAgB,YACpE,yBAAKjG,UAAU,yBACb,kBAACoE,EAAA,EAAD,CAAMC,SAAU,EAAKjB,QAAQkB,KAAK,EAAM9B,EAAMT,WAC5C,kBAACgC,EAAA,EAAD,KACE,kBAACc,EAAA,EAAD,KACE,kBAACT,EAAA,EAAKG,MAAN,CACE/B,MAAO,EAAKnB,MAAM2B,KAClBwB,SAAU,EAAKf,QACfgB,UAAU,QAEV,kBAACL,EAAA,EAAKJ,KAAN,CAAWhE,UAAU,cAArB,0BAGA,kBAACoE,EAAA,EAAKO,QAAN,CACEpD,KAAK,OACLqD,YAAY,uBAIlB,kBAACC,EAAA,EAAD,KACE,kBAACT,EAAA,EAAKG,MAAN,CACE/B,MAAO,EAAKnB,MAAM4B,SAClBuB,SAAU,EAAKb,OACfc,UAAU,YAEV,kBAACL,EAAA,EAAKJ,KAAN,CAAWhE,UAAU,cAArB,yBAGA,kBAACoE,EAAA,EAAKO,QAAN,CACEpD,KAAK,OACLqD,YAAY,mBAIlB,kBAACC,EAAA,EAAD,KACE,kBAACT,EAAA,EAAKG,MAAN,CACE/B,MAAO,EAAKnB,MAAM6B,OAClBsB,SAAU,EAAKZ,UACfa,UAAU,QAEV,kBAACL,EAAA,EAAKJ,KAAN,CAAWhE,UAAU,cAArB,4BAGA,kBAACoE,EAAA,EAAKO,QAAN,CAAcpD,KAAK,SAASqD,YAAY,WAG5C,kBAACC,EAAA,EAAD,KACE,kBAACT,EAAA,EAAKJ,KAAN,CAAWhE,UAAU,cAArB,qBAGA,kBAACc,EAAA,EAAD,CAAQd,UAAU,MAAMK,QAAQ,UAAUkB,KAAK,UAC7C,uBAAGvB,UAAU,kC,GAxFfU,aCSTwF,E,uKARP,OACI,6BACM,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GALMxF,aCsHTyF,E,4MApHb9E,MAAQ,CACN2B,KAAM,GACNC,SAAU,GACVC,OAAQ,I,EAGVjB,kB,sBAAoB,sCAAAC,EAAA,6DACVN,EAAO,EAAKc,MAAM0D,MAAMC,OAAxBzE,GACR2D,QAAQC,IAAI5D,GAFM,SAIKO,IAAMC,IAAN,sCAAyCR,IAJ9C,OAIZS,EAJY,SAKiBA,EAASC,KAApCU,EALU,EAKVA,KAAMC,EALI,EAKJA,SAAUC,EALN,EAKMA,OACxB,EAAKlB,SAAS,CACZgB,OACAC,WACAC,WATgB,2C,EAapBoD,W,uCAAa,WAAOvE,EAAUsB,GAAjB,2BAAAnB,EAAA,6DACXmB,EAAEC,iBACM1B,EAAO,EAAKc,MAAM0D,MAAMC,OAAxBzE,GAFG,EAGwB,EAAKP,MAAhC2B,EAHG,EAGHA,KAAMC,EAHH,EAGGA,SAAUC,EAHb,EAGaA,OAClBqD,EAAc,CAClBvD,OACAE,SACAD,YAEFsC,QAAQC,IAAIe,GATD,SAUYpE,IAAMqE,IAAN,sCACU5E,GAC/B2E,GAZS,OAULlE,EAVK,OAeXN,EAAS,CAAER,KAAM,cAAeI,QAASU,EAASC,OAfvC,2C,0DAiBbmB,QAAU,SAACJ,GACT,EAAKrB,SAAS,CAAEgB,KAAMK,EAAEK,OAAOlB,S,EAEjCmB,OAAS,SAACN,GACR,EAAKrB,SAAS,CAAEiB,SAAUI,EAAEK,OAAOlB,S,EAErCoB,UAAY,SAACP,GACX,EAAKrB,SAAS,CAAEkB,OAAQG,EAAEK,OAAOlB,S,uDAGzB,IAAD,OACP,OACE,kBAAC,EAAD,MACG,SAACA,GACA,OACE,kBAACzC,EAAA,EAAD,CAAWC,UAAU,YACnB,kBAAC6D,EAAA,EAAD,CAAM7D,UAAU,eACd,kBAAC6D,EAAA,EAAKC,OAAN,CAAalC,GAAG,UACd,6BACE,kBAACmC,EAAA,EAAD,KACE,yBAAK/D,UAAU,wBACb,kBAAC6D,EAAA,EAAKG,KAAN,CAAWC,GAAG,MAAd,qBAEF,yBAAKjE,UAAU,gBAKrB,kBAAC6D,EAAA,EAAKM,KAAN,KACE,0BAAME,SAAU,EAAKiC,WAAWhC,KAAK,EAAM9B,EAAMT,WAC/C,yBAAK/B,UAAU,cACb,2BAAOyG,QAAQ,QAAf,SACA,2BACEjE,MAAO,EAAKnB,MAAM2B,KAClBwB,SAAU,EAAKf,QACflC,KAAK,OACLvB,UAAU,eACV4B,GAAG,OACHoD,mBAAiB,eAGrB,yBAAKhF,UAAU,cACb,2BAAOyG,QAAQ,YAAf,QACA,2BACEjE,MAAO,EAAKnB,MAAM4B,SAClBuB,SAAU,EAAKb,OACfpC,KAAK,OACLvB,UAAU,eACV4B,GAAG,cAGP,yBAAK5B,UAAU,cACb,2BAAOyG,QAAQ,UAAf,WACA,2BACEjE,MAAO,EAAKnB,MAAM6B,OAClBsB,SAAU,EAAKZ,UACfrC,KAAK,SACLvB,UAAU,eACV4B,GAAG,YAGP,6BACE,4BAAQL,KAAK,SAASvB,UAAU,wBAAhC,QAIA,uBAAGA,UAAU,uBAAuBO,KAAK,UAAzC,uB,GAvGGG,aCKJgG,E,uKAEjB,OACE,kBAAC,IAAD,KACE,6BACE,kBAAC,EAAD,MACA,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW7F,IACjC,kBAAC,IAAD,CAAO2F,OAAK,EAACC,KAAK,WAAWC,UAAW1B,IACxC,kBAAC,IAAD,CAAOwB,OAAK,EAACC,KAAK,SAASC,UAAWX,IACtC,kBAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,gBAAgBC,UAAWV,IAC7C,kBAAC,IAAD,CAAOU,UAAW7F,Y,GAZCN,aCEboG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASb,MACvB,2D,MCVNc,IAASC,OACP,kBAAC,EAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLtC,QAAQsC,MAAMA,EAAMC,c","file":"static/js/main.d9173bb9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nclass NavbarC extends Component {\n  render() {\n    return (\n      <Container className=\"container-fluid\" style={{ marginBottom: \"55px\" }}>\n        <Navbar className=\"fixed-top\" bg=\"primary\" variant=\"dark\">\n          <Navbar.Brand href=\"/\">Employee Management App</Navbar.Brand>\n          <Nav className=\"ml-auto\">\n            <Link className=\"nav nav-link active\" to=\"/\">\n              Home\n            </Link>\n            <Link className=\"nav nav-link active\" to=\"/adduser\">\n              Add User\n            </Link>\n            <Link className=\"nav nav-link active\" to=\"/users\">\n              Employee Database\n            </Link>\n          </Nav>\n        </Navbar>\n      </Container>\n    );\n  }\n}\nexport default NavbarC;\n","import React, { Component } from 'react'\nimport {Jumbotron,Button} from \"react-bootstrap\"\n\nclass JumbotronComp extends Component {\n    render() {\n        return (\n            <Jumbotron fluid className=\"text-center\">\n            <h1>Hello from the employee management web service</h1>\n            <p>\n              This is a simple web app which is built with react, context-api, bootstrap etc.\n            </p>\n            <p>\n                <Button size=\"xl\" href=\"https://github.com/baranacikgoz\"><i className=\"fab fa-github fa-4x\"></i></Button>\n            </p>\n            \n          </Jumbotron>\n        )\n    }\n}\nexport default JumbotronComp;","import React, { Component } from \"react\";\nimport JumbotronComp from \"../components/JumbotronComp\";\nimport \"../index.css\"\n\nclass HomePage extends Component {\n  render() {\n    return (\n    <div className=\"bgimage\">\n      <JumbotronComp />\n      \n    </div>\n    );\n  }\n}\nexport default HomePage;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst UserContext = React.createContext();\n// Provider , Consumer\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_USER\":\n      return {\n        ...state,\n        users: state.users.filter((user) => action.payload !== user.id),\n      };\n    case \"ADD_USER\":\n      return {\n        ...state,\n        users: [...state.users, action.payload],\n      };\n      case \"UPDATE_USER\":\n        return{\n          ...state,\n          users : state.users.map(user=> user.id === action.payload ? action.payload : user)\n        }\n\n    default:\n      return state;\n  }\n};\n\nexport class UserProvider extends Component {\n  state = {\n    users: [],\n    dispatch: (action) => {\n      this.setState((state) => reducer(state, action));\n    },\n  };\n\n  componentDidMount = async () => {\n    const response = await axios.get(\"http://localhost:3004/users\");\n    this.setState({\n      users: response.data,\n    });\n  };\n\n  render() {\n    return (\n      <UserContext.Provider value={this.state}>\n        {this.props.children}\n      </UserContext.Provider>\n    );\n  }\n}\nconst UserConsumer = UserContext.Consumer;\n\nexport default UserConsumer;\n","import React, { Component } from \"react\";\nimport { Container, Form, Card, Button, Row, InputGroup, Col } from \"react-bootstrap\";\nimport UserConsumer from \"../context\";\nimport axios from \"axios\";\n\nclass AddUser extends Component {\n  state = {\n    visible: true,\n    name: \"\",\n    jobTitle: \"\",\n    salary: \"\",\n  };\n\n  changeVisibility = () => {\n    this.setState({\n      visible: !this.state.visible,\n    });\n  };\n\n  addUser = async (dispatch, e) => {\n    e.preventDefault();\n    const {name,jobTitle,salary} = this.state;\n    const newUser = {\n      name,\n      jobTitle,\n      salary,\n    };\nconst response = await axios.post(\"http://localhost:3004/users\",newUser)\n\n    dispatch({\n      type: \"ADD_USER\",\n      payload: response.data,\n    });\n  };\n  addName = (e) => {\n    this.setState({ name: e.target.value });\n  };\n  addJob = (e) => {\n    this.setState({ jobTitle: e.target.value });\n  };\n  addSalary = (e) => {\n    this.setState({ salary: e.target.value });\n  };\n\n  render() {\n    return (\n      <UserConsumer>\n        {(value) => {\n          return (\n            <Container className=\"col-md-4\">\n            <Card className=\"text-center\">\n              <Card.Header id=\"header\">\n                <div>\n                  <Row>\n                    <div className=\"col-md-9 text-center\">\n                      <Card.Text as=\"h4\">User add form</Card.Text>\n                    </div>\n                    <div className=\"col-md-2\">\n                      <Button\n                        onClick={this.changeVisibility}\n                        variant=\"outline-primary\"\n                        size=\"sm\"\n                      >\n                        {this.state.visible ? \"Hide\" : \"Show\"}\n                      </Button>\n                    </div>\n                  </Row>\n                </div>\n              </Card.Header>\n              {this.state.visible ? (\n                <Card.Body>\n                  <Form onSubmit={this.addUser.bind(this, value.dispatch)}>\n                    <Form.Group\n                      value={this.state.name}\n                      onChange={this.addName}\n                      controlId=\"name\"\n                    >\n                      <Form.Label>Name : </Form.Label>\n                      <Form.Control\n                        type=\"name\"\n                        placeholder=\"Gandalf Grihamut\"\n                      />\n                      <Form.Text className=\"text-muted\">\n                        Enter the name please.\n                      </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group\n                      value={this.state.jobTitle}\n                      onChange={this.addJob}\n                      controlId=\"jobTitle\"\n                    >\n                      <Form.Label>Job : </Form.Label>\n                      <Form.Control type=\"name\" placeholder=\"White Wizard\" />\n                      <Form.Text className=\"text-muted\">\n                        Enter the job please.\n                      </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group\n                      value={this.state.salary}\n                      onChange={this.addSalary}\n                      as={Col}\n                      md=\"8\"\n                      controlId=\"salary\"\n                    >\n                      <Form.Label>Salary : </Form.Label>\n                      <InputGroup>\n                        <Form.Control\n                          type=\"number\"\n                          placeholder=\"7000\"\n                          aria-describedby=\"inputGroupPrepend\"\n                          required\n                        />\n                        <InputGroup.Prepend>\n                          <InputGroup.Text id=\"inputGroupPrepend\">\n                            USD\n                          </InputGroup.Text>\n                        </InputGroup.Prepend>\n                      </InputGroup>\n                      <Form.Text className=\"text-muted\">\n                        Enter a valid number please.\n                      </Form.Text>\n                    </Form.Group>\n                    <Button\n                      className=\"btn btn-block\"\n                      variant=\"primary\"\n                      type=\"submit\"\n                    >\n                      Save\n                    </Button>\n                  </Form>\n                </Card.Body>\n              ) : null}\n            </Card>\n            </Container>\n          );\n        }}\n      </UserConsumer>\n    );\n  }\n}\nexport default AddUser;\n\n/* <Form.Group controlId=\"salaryInput\">\n              <Form.Label>Salary : </Form.Label>\n              <Form.Control type=\"number\" placeholder=\"7000\" />\n              <Form.Text className=\"text-muted\">\n                Enter the salary name please.\n              </Form.Text>\n            </Form.Group> */\n\n/*\n            \n            \n            <Form onSubmit={this.addUser}>\n              <Form.Group controlId={this.state.name}>\n                <Form.Label>Name : </Form.Label>\n                <Form.Control type=\"name\" placeholder=\"Gandalf Grihamut\" />\n                <Form.Text className=\"text-muted\">\n                  Enter the name please.\n                </Form.Text>\n              </Form.Group>\n\n              <Form.Group controlId=\"jobTitle\">\n                <Form.Label>Job : </Form.Label>\n                <Form.Control type=\"name\" placeholder=\"White Wizard\" />\n                <Form.Text className=\"text-muted\">\n                  Enter the job please.\n                </Form.Text>\n              </Form.Group>\n\n              <Form.Group as={Col} md=\"8\" controlId=\"salary\">\n                <Form.Label>Salary : </Form.Label>\n                <InputGroup>\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"7000\"\n                    aria-describedby=\"inputGroupPrepend\"\n                    required\n                  />\n                  <InputGroup.Prepend>\n                    <InputGroup.Text id=\"inputGroupPrepend\">\n                      USD\n                    </InputGroup.Text>\n                  </InputGroup.Prepend>\n                </InputGroup>\n                <Form.Text className=\"text-muted\">\n                  Enter a valid number please.\n                </Form.Text>\n              </Form.Group>\n              <Button className=\"btn btn-block\" variant=\"primary\" type=\"submit\">\n                Save\n              </Button>\n            </Form>*/\n\n/*\n\n<form onSubmit={this.addUser} >\n              <div className=\"form-group\">\n                <label htmlFor=\"name\">Name: </label>\n                <input\n                value={this.state.name}\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  placeholder=\"enter name\"\n                  className=\"form-control\"\n                  onChange={this.addName}\n                ></input>\n              </div>\n              <div className=\"form-group\" >\n                    <label htmlFor=\"jobTitle\">Name: </label>\n                    <input\n                    type=\"text\"\n                    name=\"jobTitle\"\n                    id=\"jobTitle\"\n                    placeholder=\"enter name\"\n                    className=\"form-control\"\n                    ></input>\n\n                </div>\n                <div className=\"form-group\" >\n                    <label htmlFor=\"salary\">Name: </label>\n                    <input\n                    type=\"text\"\n                    name=\"salary\"\n                    id=\"salary\"\n                    placeholder=\"enter name\"\n                    className=\"form-control\"\n                    ></input>\n\n                </div>\n              <button type=\"submit\" className=\"btn btn-success\">\n                Save\n              </button>\n            </form>\n*/\n","import React, { Component } from 'react'\nimport AddUser from \"../forms/AddUser\"\n\nclass AddPage extends Component {\n    render() {\n        return (\n            <div style={{marginTop:\"5%\"}} >\n                <AddUser/>\n            </div>\n        )\n    }\n}\nexport default AddPage;","import React, { Component } from \"react\";\nimport UserConsumer from \"../context\";\nimport { Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nclass ListItemC extends Component {\n  deleteUser = async (dispatch, e) => {\n    const { id } = this.props;\n\n    console.log(id);\n    await axios.delete(`http://localhost:3004/users/${id}`);\n\n    dispatch({\n      type: \"DELETE_USER\",\n      payload: id,\n    });\n  };\n\n  render() {\n    return (\n      <UserConsumer>\n        {(value) => {\n          return (\n            <tr>\n              <td>{this.props.id}</td>\n              <td>{this.props.name}</td>\n              <td>{this.props.jobTitle}</td>\n              <td>{this.props.salary}</td>\n              <td>\n                <Link\n                  className=\"btn btn-warning\"\n                  to={`edituser/${this.props.id}`}\n                >\n                  <i className=\"fas fa-user-edit\"></i>\n                </Link>\n              </td>\n              <td>\n                <Button\n                  onClick={this.deleteUser.bind(this, value.dispatch)}\n                  variant=\"danger\"\n                >\n                  <i className=\"far fa-trash-alt\"></i>\n                </Button>\n              </td>\n              \n            </tr>\n            \n          );\n        }}\n      </UserConsumer>\n    );\n  }\n}\nexport default ListItemC;\n","import React, { Component } from \"react\";\nimport UserConsumer from \"../context\";\nimport ListItemC from \"../components/ListItemC\";\nimport { Table } from \"react-bootstrap\";\n\nclass Users extends Component {\n  render() {\n    return (\n      <UserConsumer>\n        {(value) => {\n          return (\n            <div>\n              <Table responsive bordered hover className=\"text-center\" size=\"md\">\n                <thead>\n                  <tr>\n                    <th>ID</th>\n                    <th>Name</th>\n                    <th>Job</th>\n                    <th>Salary</th>\n                    <th>Edit User</th>\n                    <th>Delete User</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {value.users.map((user) => {\n                    return (\n                      <ListItemC\n                        key={user.id}\n                        id={user.id}\n                        name={user.name}\n                        jobTitle={user.jobTitle}\n                        salary={user.salary}\n                      />\n                    );\n                  })}\n                </tbody>\n              </Table>\n            </div>\n          );\n        }}\n      </UserConsumer>\n    );\n  }\n}\n\nexport default Users;\n","import React, { Component } from \"react\";\nimport { Navbar, Row, Col, Form, Button } from \"react-bootstrap\";\nimport UserConsumer from \"../context\";\nimport axios from \"axios\";\n\nclass BottomAdd extends Component {\n  state = {\n    name: \"\",\n    jobTitle: \"\",\n    salary: \"\",\n  };\n\n  addUser = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, jobTitle, salary } = this.state;\n    const newUser = {\n      name,\n      jobTitle,\n      salary,\n    };\n    const response = await axios.post(\"http://localhost:3004/users\", newUser);\n\n    dispatch({\n      type: \"ADD_USER\",\n      payload: response.data,\n    });\n  };\n  addName = (e) => {\n    this.setState({ name: e.target.value });\n  };\n  addJob = (e) => {\n    this.setState({ jobTitle: e.target.value });\n  };\n  addSalary = (e) => {\n    this.setState({ salary: e.target.value });\n  };\n  render() {\n    return (\n      <UserConsumer>\n        {(value) => {\n          return (\n           \n              <Navbar  className=\"fixed-bottom text-center\" style={{backgroundColor:\"#eaeded\"}}>\n                <div className=\"text-center col-md-12\">\n                  <Form onSubmit={this.addUser.bind(this, value.dispatch)}>\n                    <Row>\n                      <Col>\n                        <Form.Group\n                          value={this.state.name}\n                          onChange={this.addName}\n                          controlId=\"name\"\n                        >\n                          <Form.Text className=\"text-muted\">\n                            Enter the name please.\n                          </Form.Text>\n                          <Form.Control\n                            type=\"name\"\n                            placeholder=\"Gandalf the Grey\"\n                          />\n                        </Form.Group>\n                      </Col>\n                      <Col>\n                        <Form.Group\n                          value={this.state.jobTitle}\n                          onChange={this.addJob}\n                          controlId=\"jobTitle\"\n                        >\n                          <Form.Text className=\"text-muted\">\n                            Enter the job please.\n                          </Form.Text>\n                          <Form.Control\n                            type=\"name\"\n                            placeholder=\"White Wizard\"\n                          />\n                        </Form.Group>\n                      </Col>\n                      <Col>\n                        <Form.Group\n                          value={this.state.salary}\n                          onChange={this.addSalary}\n                          controlId=\"name\"\n                        >\n                          <Form.Text className=\"text-muted\">\n                            Enter the salary please.\n                          </Form.Text>\n                          <Form.Control type=\"number\" placeholder=\"7000\" />\n                        </Form.Group>\n                      </Col>\n                      <Col>\n                        <Form.Text className=\"text-muted\">\n                          Clik to add user.\n                        </Form.Text>\n                        <Button className=\"btn\" variant=\"primary\" type=\"submit\">\n                          <i className=\"fas fa-user-plus\"></i>\n                        </Button>\n                      </Col>\n                    </Row>\n                  </Form>\n                </div>\n              </Navbar>\n          \n          );\n        }}\n      </UserConsumer>\n    );\n  }\n}\nexport default BottomAdd;\n","import React, { Component } from 'react'\nimport  Users  from '../components/Users';\nimport BottomAdd from '../components/BottomAdd';\n\nclass UsersPage extends Component {\n    render() {\n        return (\n            <div>\n                  <Users />\n                  <BottomAdd />\n                </div>\n        )\n    }\n}\nexport default UsersPage;","import React, { Component } from \"react\";\nimport { Container, Card, Row } from \"react-bootstrap\";\nimport UserConsumer from \"../context\";\nimport axios from \"axios\";\n\nclass UpdateUser extends Component {\n  state = {\n    name: \"\",\n    jobTitle: \"\",\n    salary: \"\",\n  };\n\n  componentDidMount = async () => {\n    const { id } = this.props.match.params;\n    console.log(id);\n\n    const response = await axios.get(`http://localhost:3004/users/${id}`);\n    const { name, jobTitle, salary } = response.data;\n    this.setState({\n      name,\n      jobTitle,\n      salary,\n    });\n  };\n\n  updateUser = async (dispatch, e) => {\n    e.preventDefault();\n    const { id } = this.props.match.params;\n    const { name, jobTitle, salary } = this.state;\n    const updatedUser = {\n      name,\n      salary,\n      jobTitle,\n    };\n    console.log(updatedUser);\n    const response = await axios.put(\n      `http://localhost:3004/users/${id}`,\n      updatedUser\n    );\n\n    dispatch({ type: \"UPDATE_USER\", payload: response.data });\n  };\n  addName = (e) => {\n    this.setState({ name: e.target.value });\n  };\n  addJob = (e) => {\n    this.setState({ jobTitle: e.target.value });\n  };\n  addSalary = (e) => {\n    this.setState({ salary: e.target.value });\n  };\n\n  render() {\n    return (\n      <UserConsumer>\n        {(value) => {\n          return (\n            <Container className=\"col-md-4\">\n              <Card className=\"text-center\">\n                <Card.Header id=\"header\">\n                  <div>\n                    <Row>\n                      <div className=\"col-md-9 text-center\">\n                        <Card.Text as=\"h4\">Update User form</Card.Text>\n                      </div>\n                      <div className=\"col-md-2\"></div>\n                    </Row>\n                  </div>\n                </Card.Header>\n\n                <Card.Body>\n                  <form onSubmit={this.updateUser.bind(this, value.dispatch)}>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"name\">Name:</label>\n                      <input\n                        value={this.state.name}\n                        onChange={this.addName}\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"name\"\n                        aria-describedby=\"emailHelp\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"jobTitle\">Job:</label>\n                      <input\n                        value={this.state.jobTitle}\n                        onChange={this.addJob}\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"jobTitle\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"salary\">Salary:</label>\n                      <input\n                        value={this.state.salary}\n                        onChange={this.addSalary}\n                        type=\"number\"\n                        className=\"form-control\"\n                        id=\"salary\"\n                      />\n                    </div>\n                    <div>\n                      <button type=\"submit\" className=\"btn btn-primary mr-2\">\n                        Save\n                      </button>\n\n                      <a className=\"btn btn-success ml-2\" href=\"/users\">\n                        Go back\n                      </a>\n                    </div>\n                  </form>\n                </Card.Body>\n              </Card>\n            </Container>\n          );\n        }}\n      </UserConsumer>\n    );\n  }\n}\nexport default UpdateUser;\n\n/*\n\n<form onSubmit={this.updateUser.bind(this, value.dispatch)}>\n  <div class=\"form-group\">\n    <label for=\"name\">Name:</label>\n    <input value={this.state.name}\n                        onChange={this.addName} type=\"text\" class=\"form-control\" id=\"name\" aria-describedby=\"emailHelp\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"jobTitle\">Job:</label>\n    <input value={this.state.jobTitle}\n                        onChange={this.addJob} type=\"text\" class=\"form-control\" id=\"jobTitle\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"salary\">Salary:</label>\n    <input value={this.state.salary}\n                        onChange={this.addSalary type=\"number\" class=\"form-control\" id=\"salary\">\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n</form>\n*/\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport NavbarC from \"./components/NavbarC\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport AddPage from \"./pages/AddPage\";\nimport UsersPage from \"./pages/UsersPage\"\nimport UpdateUser from \"./pages/UpdateUser\"\n\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <NavbarC></NavbarC>\n          <div>\n            <Switch>\n              <Route exact path=\"/\" component={HomePage} />\n              <Route exact path=\"/adduser\" component={AddPage} />\n              <Route exact path=\"/users\" component={UsersPage} />\n              <Route exact path=\"/edituser/:id\" component={UpdateUser} />\n              <Route component={HomePage} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {UserProvider} from \"./context\"\n\nReactDOM.render(\n  <UserProvider>\n    <App />\n  </UserProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}