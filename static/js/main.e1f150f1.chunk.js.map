{"version":3,"sources":["components/NavbarC.js","pages/HomePage.js","context.js","forms/AddUser.js","pages/AddPage.js","components/ListItemC.js","components/Users.js","components/BottomAdd.js","pages/UsersPage.js","pages/UpdateUser.js","App.js","serviceWorker.js","index.js"],"names":["NavbarC","Navbar","collapseOnSelect","expand","bg","variant","fixed","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","to","Component","HomePage","UserContext","React","createContext","reducer","state","action","type","users","filter","user","payload","map","UserProvider","dispatch","setState","componentDidMount","a","axios","get","response","data","Provider","value","this","props","children","UserConsumer","Consumer","AddUser","name","jobTitle","salary","changeVisibility","visible","addUser","e","preventDefault","newUser","post","addName","target","addJob","addSalary","Container","style","paddingTop","Card","Header","Text","as","Body","Form","onSubmit","bind","Group","onChange","controlId","Label","Control","placeholder","Col","md","InputGroup","aria-describedby","required","Prepend","Button","AddPage","ListItemC","deleteUser","console","log","delete","onClick","Users","class","Table","responsive","bordered","hover","key","BottomAdd","toggleNavbar","collapsed","Row","UsersPage","classname","UpdateUser","match","params","updateUser","updatedUser","put","htmlFor","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e1f150f1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"../index.css\";\n\nclass NavbarC extends Component {\n  render() {\n    return (\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" fixed=\"top\">\n        <Navbar.Brand href=\"/home\">Employee Managent App</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"https://github.com/baranacikgoz\">\n              <i className=\"fab fa-github fa-2x\"></i>\n            </Nav.Link>\n            <Nav.Link href=\"https://www.linkedin.com/in/baran-acikgoz\">\n              <i className=\"fab fa-linkedin fa-2x\"></i>\n            </Nav.Link>\n          </Nav>\n          <Nav>\n            <Link className=\"nav-link\" to=\"/\">\n              Home\n            </Link>\n\n            <Link className=\"nav-link\" to=\"/users\">\n              Database & Operations\n            </Link>\n            <Link className=\"nav-link\" to=\"/adduser\">\n              Employee Add\n            </Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\nexport default NavbarC;\n","import React, { Component } from \"react\";\nimport \"../index.css\";\nimport { Link } from \"react-router-dom\";\n\nclass HomePage extends Component {\n  render() {\n    return (\n      <header className=\"masthead bgimage\">\n        <div className=\"container h-100\">\n          <div className=\"row h-100 align-items-center justify-content-center text-center\">\n            <div className=\"col-lg-10 align-self-end\">\n              <h1 className=\"text-uppercase text-black font-weight-bold\">\n                Employee Management App\n              </h1>\n            </div>\n            <div className=\"col-lg-8 align-self-baseline\">\n              <p className=\"text-white-75 font-weight-light mb-5\">\n                I've built this app with React.js, Context-Api, React-Router,\n                Bootstrap etc.\n              </p>\n              <hr className=\"divider my-4\" />\n              <p className=\"text-white-75 font-weight-light mb-5\">\n                If you want to try app, once click{\" \"}\n                <a href=\"https://infinite-escarpment-57092.herokuapp.com/\">\n                  here{\" \"}\n                </a>\n                to wake up the database. Now you are free to add, delete or edit\n                employees.\n              </p>\n\n              <Link className=\"btn btn-dark btn-xl mr-2\" to=\"/users\">\n                Database & Operations\n              </Link>\n              <Link className=\"btn btn-dark btn-xl ml-2\" to=\"/adduser\">\n                Employee Add\n              </Link>\n            </div>\n          </div>\n        </div>\n      </header>\n    );\n  }\n}\nexport default HomePage;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst UserContext = React.createContext();\n// Provider , Consumer\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_USER\":\n      return {\n        ...state,\n        users: state.users.filter((user) => action.payload !== user.id),\n      };\n    case \"ADD_USER\":\n      return {\n        ...state,\n        users: [...state.users, action.payload],\n      };\n      case \"UPDATE_USER\":\n        return{\n          ...state,\n          users : state.users.map(user=> user.id === action.payload ? action.payload : user)\n        }\n\n    default:\n      return state;\n  }\n};\n\nexport class UserProvider extends Component {\n  state = {\n    users: [],\n    dispatch: (action) => {\n      this.setState((state) => reducer(state, action));\n    },\n  };\n\n  componentDidMount = async () => {\n    const response = await axios.get(\"https://infinite-escarpment-57092.herokuapp.com/users\");\n    this.setState({\n      users: response.data,\n    });\n  };\n\n  render() {\n    return (\n      <UserContext.Provider value={this.state}>\n        {this.props.children}\n      </UserContext.Provider>\n    );\n  }\n}\nconst UserConsumer = UserContext.Consumer;\n\nexport default UserConsumer;\n","import React, { Component } from \"react\";\nimport {\n  Container,\n  Form,\n  Card,\n  Button,\n  InputGroup,\n  Col,\n} from \"react-bootstrap\";\nimport UserConsumer from \"../context\";\nimport axios from \"axios\";\n\nclass AddUser extends Component {\n  state = {\n    name: \"\",\n    jobTitle: \"\",\n    salary: \"\",\n  };\n\n  changeVisibility = () => {\n    this.setState({\n      visible: !this.state.visible,\n    });\n  };\n\n  addUser = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, jobTitle, salary } = this.state;\n    const newUser = {\n      name,\n      jobTitle,\n      salary,\n    };\n    const response = await axios.post(\"http://localhost:3004/users\", newUser);\n\n    dispatch({\n      type: \"ADD_USER\",\n      payload: response.data,\n    });\n  };\n  addName = (e) => {\n    this.setState({ name: e.target.value });\n  };\n  addJob = (e) => {\n    this.setState({ jobTitle: e.target.value });\n  };\n  addSalary = (e) => {\n    this.setState({ salary: e.target.value });\n  };\n\n  render() {\n    return (\n      <UserConsumer>\n        {(value) => {\n          return (\n            <Container style={{paddingTop:\"50px\"}} className=\"col-md-4\">\n              <Card className=\"text-center\">\n                <Card.Header id=\"header\">\n                  <div className=\"text-center\">\n                    <Card.Text as=\"h4\">Add form</Card.Text>\n                  </div>\n                </Card.Header>\n\n                <Card.Body>\n                  <Form onSubmit={this.addUser.bind(this, value.dispatch)}>\n                    <Form.Group\n                      value={this.state.name}\n                      onChange={this.addName}\n                      controlId=\"name\"\n                    >\n                      <Form.Label>Name : </Form.Label>\n                      <Form.Control\n                        type=\"name\"\n                        placeholder=\"Gandalf Grihamut\"\n                      />\n                      <Form.Text className=\"text-muted\">\n                        Enter the name please.\n                      </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group\n                      value={this.state.jobTitle}\n                      onChange={this.addJob}\n                      controlId=\"jobTitle\"\n                    >\n                      <Form.Label>Job : </Form.Label>\n                      <Form.Control type=\"name\" placeholder=\"White Wizard\" />\n                      <Form.Text className=\"text-muted\">\n                        Enter the job please.\n                      </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group\n                      value={this.state.salary}\n                      onChange={this.addSalary}\n                      as={Col}\n                      md=\"8\"\n                      className=\"mr-auto ml-auto\"\n                      controlId=\"salary\"\n                    >\n                      <Form.Label>Salary : </Form.Label>\n                      <InputGroup>\n                        <Form.Control\n                          type=\"number\"\n                          placeholder=\"7000\"\n                          aria-describedby=\"inputGroupPrepend\"\n                          required\n                        />\n                        <InputGroup.Prepend>\n                          <InputGroup.Text id=\"inputGroupPrepend\">\n                            USD\n                          </InputGroup.Text>\n                        </InputGroup.Prepend>\n                      </InputGroup>\n                      <Form.Text className=\"text-muted\">\n                        Enter a valid number please.\n                      </Form.Text>\n                    </Form.Group>\n                    <Button\n                      className=\"btn btn-block\"\n                      variant=\"dark\"\n                      type=\"submit\"\n                    >\n                      Save\n                    </Button>\n                  </Form>\n                </Card.Body>\n              </Card>\n            </Container>\n          );\n        }}\n      </UserConsumer>\n    );\n  }\n}\nexport default AddUser;\n\n/* <Form.Group controlId=\"salaryInput\">\n              <Form.Label>Salary : </Form.Label>\n              <Form.Control type=\"number\" placeholder=\"7000\" />\n              <Form.Text className=\"text-muted\">\n                Enter the salary name please.\n              </Form.Text>\n            </Form.Group> */\n\n/*\n            \n            \n            <Form onSubmit={this.addUser}>\n              <Form.Group controlId={this.state.name}>\n                <Form.Label>Name : </Form.Label>\n                <Form.Control type=\"name\" placeholder=\"Gandalf Grihamut\" />\n                <Form.Text className=\"text-muted\">\n                  Enter the name please.\n                </Form.Text>\n              </Form.Group>\n\n              <Form.Group controlId=\"jobTitle\">\n                <Form.Label>Job : </Form.Label>\n                <Form.Control type=\"name\" placeholder=\"White Wizard\" />\n                <Form.Text className=\"text-muted\">\n                  Enter the job please.\n                </Form.Text>\n              </Form.Group>\n\n              <Form.Group as={Col} md=\"8\" controlId=\"salary\">\n                <Form.Label>Salary : </Form.Label>\n                <InputGroup>\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"7000\"\n                    aria-describedby=\"inputGroupPrepend\"\n                    required\n                  />\n                  <InputGroup.Prepend>\n                    <InputGroup.Text id=\"inputGroupPrepend\">\n                      USD\n                    </InputGroup.Text>\n                  </InputGroup.Prepend>\n                </InputGroup>\n                <Form.Text className=\"text-muted\">\n                  Enter a valid number please.\n                </Form.Text>\n              </Form.Group>\n              <Button className=\"btn btn-block\" variant=\"primary\" type=\"submit\">\n                Save\n              </Button>\n            </Form>*/\n\n/*\n\n<form onSubmit={this.addUser} >\n              <div className=\"form-group\">\n                <label htmlFor=\"name\">Name: </label>\n                <input\n                value={this.state.name}\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  placeholder=\"enter name\"\n                  className=\"form-control\"\n                  onChange={this.addName}\n                ></input>\n              </div>\n              <div className=\"form-group\" >\n                    <label htmlFor=\"jobTitle\">Name: </label>\n                    <input\n                    type=\"text\"\n                    name=\"jobTitle\"\n                    id=\"jobTitle\"\n                    placeholder=\"enter name\"\n                    className=\"form-control\"\n                    ></input>\n\n                </div>\n                <div className=\"form-group\" >\n                    <label htmlFor=\"salary\">Name: </label>\n                    <input\n                    type=\"text\"\n                    name=\"salary\"\n                    id=\"salary\"\n                    placeholder=\"enter name\"\n                    className=\"form-control\"\n                    ></input>\n\n                </div>\n              <button type=\"submit\" className=\"btn btn-success\">\n                Save\n              </button>\n            </form>\n*/\n","import React, { Component } from 'react'\nimport AddUser from \"../forms/AddUser\"\nimport \"../index.css\"\n\nclass AddPage extends Component {\n    render() {\n        return (\n         <div className=\"bgimage\" style={{paddingTop:\"70px\"}}>\n             <AddUser/>\n         </div>\n                \n           \n        )\n    }\n}\nexport default AddPage;","import React, { Component } from \"react\";\nimport UserConsumer from \"../context\";\nimport { Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nclass ListItemC extends Component {\n  deleteUser = async (dispatch, e) => {\n    const { id } = this.props;\n\n    console.log(id);\n    await axios.delete(`https://infinite-escarpment-57092.herokuapp.com/users/${id}`);\n\n    dispatch({\n      type: \"DELETE_USER\",\n      payload: id,\n    });\n  };\n\n  render() {\n    return (\n      <UserConsumer>\n        {(value) => {\n          return (\n            <tr>\n              <td className=\"col-md-1\">{this.props.id}</td>\n              <td>{this.props.name}</td>\n              <td>{this.props.jobTitle}</td>\n              <td>{this.props.salary}</td>\n              <td>\n                <Link\n                  className=\"btn btn-warning\"\n                  to={`edituser/${this.props.id}`}\n                >\n                  <i className=\"fas fa-user-edit\"></i>\n                </Link>\n              </td>\n              <td>\n                <Button\n                  onClick={this.deleteUser.bind(this, value.dispatch)}\n                  variant=\"danger\"\n                >\n                  <i className=\"far fa-trash-alt\"></i>\n                </Button>\n              </td>\n              \n            </tr>\n            \n          );\n        }}\n      </UserConsumer>\n    );\n  }\n}\nexport default ListItemC;\n","import React, { Component } from \"react\";\nimport UserConsumer from \"../context\";\nimport ListItemC from \"../components/ListItemC\";\nimport { Table } from \"react-bootstrap\";\n\nclass Users extends Component {\n  render() {\n    return (\n      <UserConsumer>\n        {(value) => {\n          return (\n            <div class=\"container\">\n              <Table responsive=\"sm\" bordered hover className=\"text-center\">\n                <thead>\n                  <tr>\n                    <th>ID</th>\n                    <th>Name</th>\n                    <th>Job</th>\n                    <th>Salary</th>\n                    <th>Edit</th>\n                    <th>Delete</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {value.users.map((user) => {\n                    return (\n                      <ListItemC\n                        key={user.id}\n                        id={user.id}\n                        name={user.name}\n                        jobTitle={user.jobTitle}\n                        salary={user.salary}\n                      />\n                    );\n                  })}\n                </tbody>\n              </Table>\n            </div>\n          );\n        }}\n      </UserConsumer>\n    );\n  }\n}\n\nexport default Users;\n","import React, { Component } from \"react\";\nimport { Navbar, Row, Col, Form, Button, Nav } from \"react-bootstrap\";\nimport UserConsumer from \"../context\";\nimport axios from \"axios\";\n\nclass BottomAdd extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleNavbar = this.toggleNavbar.bind(this);\n\n    this.state = {\n      collapsed: false,\n      name: \"\",\n      jobTitle: \"\",\n      salary: \"\",\n    };\n  }\n  addUser = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, jobTitle, salary } = this.state;\n    const newUser = {\n      name,\n      jobTitle,\n      salary,\n    };\n    const response = await axios.post(\n      \"https://infinite-escarpment-57092.herokuapp.com/users\",\n      newUser\n    );\n\n    dispatch({\n      type: \"ADD_USER\",\n      payload: response.data,\n    });\n  };\n  toggleNavbar() {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  }\n\n  addName = (e) => {\n    this.setState({ name: e.target.value });\n  };\n  addJob = (e) => {\n    this.setState({ jobTitle: e.target.value });\n  };\n  addSalary = (e) => {\n    this.setState({ salary: e.target.value });\n  };\n  render() {\n    return (\n      <UserConsumer>\n        {(value) => {\n          const collapsed = this.state.collapsed;\n          return (\n            <Navbar\n              className=\"text-center\"\n              collapseOnSelect\n              expand=\"md\"\n              bg=\"dark\"\n              variant=\"dark\"\n            >\n              <Navbar.Brand>Add Employee Easily</Navbar.Brand>\n              <Navbar.Toggle\n                onClick={this.toggleNavbar}\n                aria-controls=\"responsive-navbar-nav\"\n              />\n              <Navbar.Collapse id=\"responsive-navbar-nav\">\n                {collapsed ? (\n                  <Nav>\n                    <Form\n                      className=\"text-center\"\n                      onSubmit={this.addUser.bind(this, value.dispatch)}\n                    >\n                      {\" \"}\n                      <Form.Group\n                        value={this.state.name}\n                        onChange={this.addName}\n                        controlId=\"name\"\n                      >\n                        <Form.Text className=\"text-muted\">\n                          Enter the name please.\n                        </Form.Text>\n                        <Form.Control\n                          type=\"name\"\n                          placeholder=\"Gandalf the Grey\"\n                        />\n                      </Form.Group>\n                      <Form.Group\n                        value={this.state.jobTitle}\n                        onChange={this.addJob}\n                        controlId=\"jobTitle\"\n                      >\n                        <Form.Text className=\"text-muted\">\n                          Enter the job please.\n                        </Form.Text>\n                        <Form.Control type=\"name\" placeholder=\"White Wizard\" />\n                      </Form.Group>\n                      <Form.Group\n                        value={this.state.salary}\n                        onChange={this.addSalary}\n                        controlId=\"name\"\n                      >\n                        <Form.Text className=\"text-muted\">\n                          Enter the salary please.\n                        </Form.Text>\n                        <Form.Control type=\"number\" placeholder=\"7000\" />\n                      </Form.Group>{\" \"}\n                      <Form.Text className=\"text-muted\">\n                        Clik to add user.\n                      </Form.Text>\n                      <Button\n                        className=\"btn col-md-3 ml-auto mr-auto\"\n                        variant=\"primary\"\n                        type=\"submit\"\n                      >\n                        <i className=\"fas fa-user-plus\"></i>\n                      </Button>\n                    </Form>\n                  </Nav>\n                ) : (\n                  <Nav className=\"ml-auto mr-auto\">\n                    <Form\n                      className=\"text-center col-md-auto\"\n                      onSubmit={this.addUser.bind(this, value.dispatch)}\n                    >\n                      <Row>\n                        {\" \"}\n                        <Col>\n                          <Form.Group\n                            value={this.state.name}\n                            onChange={this.addName}\n                            controlId=\"name\"\n                          >\n                            <Form.Text className=\"text-muted\">\n                              Enter the name please.\n                            </Form.Text>\n                            <Form.Control\n                              type=\"name\"\n                              placeholder=\"Gandalf the Grey\"\n                            />\n                          </Form.Group>\n                        </Col>\n                        <Col>\n                          <Form.Group\n                            value={this.state.jobTitle}\n                            onChange={this.addJob}\n                            controlId=\"jobTitle\"\n                          >\n                            <Form.Text className=\"text-muted\">\n                              Enter the job please.\n                            </Form.Text>\n                            <Form.Control\n                              type=\"name\"\n                              placeholder=\"White Wizard\"\n                            />\n                          </Form.Group>\n                        </Col>\n                        <Col>\n                          <Form.Group\n                            value={this.state.salary}\n                            onChange={this.addSalary}\n                            controlId=\"name\"\n                          >\n                            <Form.Text className=\"text-muted\">\n                              Enter the salary please.\n                            </Form.Text>\n                            <Form.Control type=\"number\" placeholder=\"7000\" />\n                          </Form.Group>\n                        </Col>\n                        <Col>\n                          {\" \"}\n                          <Form.Text className=\"text-muted\">\n                            Clik to add user.\n                          </Form.Text>\n                          <Button\n                            className=\"btn btn-success ml-auto mr-auto\"\n                            type=\"submit\"\n                          >\n                            <i className=\"fas fa-user-plus\"></i>\n                          </Button>\n                        </Col>\n                      </Row>\n                    </Form>\n                  </Nav>\n                )}\n              </Navbar.Collapse>\n            </Navbar>\n          );\n        }}\n      </UserConsumer>\n    );\n  }\n}\nexport default BottomAdd;\n","import React, { Component } from \"react\";\nimport Users from \"../components/Users\";\nimport BottomAdd from \"../components/BottomAdd\";\n\nclass UsersPage extends Component {\n  render() {\n    return (\n      <div classname=\"container\" >\n        <body style={{ paddingTop: \"80px\" }}>\n          <Users />\n          <BottomAdd />\n        </body>\n      </div>\n    );\n  }\n}\nexport default UsersPage;\n","import React, { Component } from \"react\";\nimport { Container, Card, Row } from \"react-bootstrap\";\nimport UserConsumer from \"../context\";\nimport axios from \"axios\";\nimport {Link} from \"react-router-dom\"\n\nclass UpdateUser extends Component {\n  state = {\n    name: \"\",\n    jobTitle: \"\",\n    salary: \"\",\n  };\n\n  componentDidMount = async () => {\n    const { id } = this.props.match.params;\n    console.log(id);\n\n    const response = await axios.get(`https://infinite-escarpment-57092.herokuapp.com/users/${id}`);\n    const { name, jobTitle, salary } = response.data;\n    this.setState({\n      name,\n      jobTitle,\n      salary,\n    });\n  };\n\n  updateUser = async (dispatch, e) => {\n    e.preventDefault();\n    const { id } = this.props.match.params;\n    const { name, jobTitle, salary } = this.state;\n    const updatedUser = {\n      name,\n      salary,\n      jobTitle,\n    };\n    console.log(updatedUser);\n    const response = await axios.put(\n      `https://infinite-escarpment-57092.herokuapp.com/users/${id}`,\n      updatedUser\n    );\n\n    dispatch({ type: \"UPDATE_USER\", payload: response.data });\n  };\n  addName = (e) => {\n    this.setState({ name: e.target.value });\n  };\n  addJob = (e) => {\n    this.setState({ jobTitle: e.target.value });\n  };\n  addSalary = (e) => {\n    this.setState({ salary: e.target.value });\n  };\n\n  render() {\n    return (\n      <UserConsumer>\n        {(value) => {\n          return (\n            <Container className=\"col-md-4\" style={{paddingTop:\"70px\"}}>\n              <Card className=\"text-center\">\n                <Card.Header id=\"header\">\n                  <div>\n                    <Row>\n                      <div className=\"col-md-9 text-center\">\n                        <Card.Text as=\"h4\">Update User form</Card.Text>\n                      </div>\n                      <div className=\"col-md-2\"></div>\n                    </Row>\n                  </div>\n                </Card.Header>\n\n                <Card.Body>\n                  <form onSubmit={this.updateUser.bind(this, value.dispatch)}>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"name\">Name:</label>\n                      <input\n                        value={this.state.name}\n                        onChange={this.addName}\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"name\"\n                        aria-describedby=\"emailHelp\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"jobTitle\">Job:</label>\n                      <input\n                        value={this.state.jobTitle}\n                        onChange={this.addJob}\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"jobTitle\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"salary\">Salary:</label>\n                      <input\n                        value={this.state.salary}\n                        onChange={this.addSalary}\n                        type=\"number\"\n                        className=\"form-control\"\n                        id=\"salary\"\n                      />\n                    </div>\n                    <div>\n                      <button type=\"submit\" className=\"btn btn-primary mr-2\">\n                        Save\n                      </button>\n\n                      <Link className=\"btn btn-success ml-2\" to=\"/users\">\n                        Go back\n                      </Link>\n                    </div>\n                  </form>\n                </Card.Body>\n              </Card>\n            </Container>\n          );\n        }}\n      </UserConsumer>\n    );\n  }\n}\nexport default UpdateUser;\n\n/*\n\n<form onSubmit={this.updateUser.bind(this, value.dispatch)}>\n  <div class=\"form-group\">\n    <label for=\"name\">Name:</label>\n    <input value={this.state.name}\n                        onChange={this.addName} type=\"text\" class=\"form-control\" id=\"name\" aria-describedby=\"emailHelp\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"jobTitle\">Job:</label>\n    <input value={this.state.jobTitle}\n                        onChange={this.addJob} type=\"text\" class=\"form-control\" id=\"jobTitle\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"salary\">Salary:</label>\n    <input value={this.state.salary}\n                        onChange={this.addSalary type=\"number\" class=\"form-control\" id=\"salary\">\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n</form>\n*/\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport NavbarC from \"./components/NavbarC\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport AddPage from \"./pages/AddPage\";\nimport UsersPage from \"./pages/UsersPage\"\nimport UpdateUser from \"./pages/UpdateUser\"\n\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <NavbarC></NavbarC>\n          <div>\n            <Switch>\n              <Route exact path=\"/\" component={HomePage} />\n              <Route exact path=\"/adduser\" component={AddPage} />\n              <Route exact path=\"/users\" component={UsersPage} />\n              <Route exact path=\"/edituser/:id\" component={UpdateUser} />\n              <Route component={HomePage} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {UserProvider} from \"./context\"\n\nReactDOM.render(\n  <UserProvider>\n    <App />\n  </UserProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}