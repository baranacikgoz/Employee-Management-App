{"ast":null,"code":"import _regeneratorRuntime from\"/home/baran/Software/Completed Works/Employee-Management-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/baran/Software/Completed Works/Employee-Management-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/baran/Software/Completed Works/Employee-Management-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/baran/Software/Completed Works/Employee-Management-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/home/baran/Software/Completed Works/Employee-Management-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/home/baran/Software/Completed Works/Employee-Management-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import{Container,Form,Card,Button,Row,InputGroup,Col}from\"react-bootstrap\";import UserConsumer from\"../context\";import axios from\"axios\";var AddUser=/*#__PURE__*/function(_Component){_inherits(AddUser,_Component);var _super=_createSuper(AddUser);function AddUser(){var _this;_classCallCheck(this,AddUser);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={visible:true,name:\"\",jobTitle:\"\",salary:\"\"};_this.changeVisibility=function(){_this.setState({visible:!_this.state.visible});};_this.addUser=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch,e){var _this$state,name,jobTitle,salary,newUser,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();_this$state=_this.state,name=_this$state.name,jobTitle=_this$state.jobTitle,salary=_this$state.salary;newUser={name:name,jobTitle:jobTitle,salary:salary};_context.next=5;return axios.post(\"http://localhost:3004/users\",newUser);case 5:response=_context.sent;dispatch({type:\"ADD_USER\",payload:response.data});case 7:case\"end\":return _context.stop();}}},_callee);}));return function(_x,_x2){return _ref.apply(this,arguments);};}();_this.addName=function(e){_this.setState({name:e.target.value});};_this.addJob=function(e){_this.setState({jobTitle:e.target.value});};_this.addSalary=function(e){_this.setState({salary:e.target.value});};return _this;}_createClass(AddUser,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(UserConsumer,null,function(value){return/*#__PURE__*/React.createElement(Container,{className:\"col-md-4 mt-auto\"},/*#__PURE__*/React.createElement(Card,{className:\"text-center\"},/*#__PURE__*/React.createElement(Card.Header,{id:\"header\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-9 text-center\"},/*#__PURE__*/React.createElement(Card.Text,{as:\"h4\"},\"Employee add form\")),/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-2\"},/*#__PURE__*/React.createElement(Button,{onClick:_this2.changeVisibility,variant:\"outline-primary\",size:\"sm\"},_this2.state.visible?\"Hide\":\"Show\"))))),_this2.state.visible?/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Form,{onSubmit:_this2.addUser.bind(_this2,value.dispatch)},/*#__PURE__*/React.createElement(Form.Group,{value:_this2.state.name,onChange:_this2.addName,controlId:\"name\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Name : \"),/*#__PURE__*/React.createElement(Form.Control,{type:\"name\",placeholder:\"Gandalf Grihamut\"}),/*#__PURE__*/React.createElement(Form.Text,{className:\"text-muted\"},\"Enter the name please.\")),/*#__PURE__*/React.createElement(Form.Group,{value:_this2.state.jobTitle,onChange:_this2.addJob,controlId:\"jobTitle\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Job : \"),/*#__PURE__*/React.createElement(Form.Control,{type:\"name\",placeholder:\"White Wizard\"}),/*#__PURE__*/React.createElement(Form.Text,{className:\"text-muted\"},\"Enter the job please.\")),/*#__PURE__*/React.createElement(Form.Group,{value:_this2.state.salary,onChange:_this2.addSalary,as:Col,md:\"8\",controlId:\"salary\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Salary : \"),/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(Form.Control,{type:\"number\",placeholder:\"7000\",\"aria-describedby\":\"inputGroupPrepend\",required:true}),/*#__PURE__*/React.createElement(InputGroup.Prepend,null,/*#__PURE__*/React.createElement(InputGroup.Text,{id:\"inputGroupPrepend\"},\"USD\"))),/*#__PURE__*/React.createElement(Form.Text,{className:\"text-muted\"},\"Enter a valid number please.\")),/*#__PURE__*/React.createElement(Button,{className:\"btn btn-block\",variant:\"primary\",type:\"submit\"},\"Save\"))):null));});}}]);return AddUser;}(Component);export default AddUser;/* <Form.Group controlId=\"salaryInput\">\n              <Form.Label>Salary : </Form.Label>\n              <Form.Control type=\"number\" placeholder=\"7000\" />\n              <Form.Text className=\"text-muted\">\n                Enter the salary name please.\n              </Form.Text>\n            </Form.Group> */ /*\n            \n            \n            <Form onSubmit={this.addUser}>\n              <Form.Group controlId={this.state.name}>\n                <Form.Label>Name : </Form.Label>\n                <Form.Control type=\"name\" placeholder=\"Gandalf Grihamut\" />\n                <Form.Text className=\"text-muted\">\n                  Enter the name please.\n                </Form.Text>\n              </Form.Group>\n\n              <Form.Group controlId=\"jobTitle\">\n                <Form.Label>Job : </Form.Label>\n                <Form.Control type=\"name\" placeholder=\"White Wizard\" />\n                <Form.Text className=\"text-muted\">\n                  Enter the job please.\n                </Form.Text>\n              </Form.Group>\n\n              <Form.Group as={Col} md=\"8\" controlId=\"salary\">\n                <Form.Label>Salary : </Form.Label>\n                <InputGroup>\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"7000\"\n                    aria-describedby=\"inputGroupPrepend\"\n                    required\n                  />\n                  <InputGroup.Prepend>\n                    <InputGroup.Text id=\"inputGroupPrepend\">\n                      USD\n                    </InputGroup.Text>\n                  </InputGroup.Prepend>\n                </InputGroup>\n                <Form.Text className=\"text-muted\">\n                  Enter a valid number please.\n                </Form.Text>\n              </Form.Group>\n              <Button className=\"btn btn-block\" variant=\"primary\" type=\"submit\">\n                Save\n              </Button>\n            </Form>*/ /*\n\n<form onSubmit={this.addUser} >\n              <div className=\"form-group\">\n                <label htmlFor=\"name\">Name: </label>\n                <input\n                value={this.state.name}\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  placeholder=\"enter name\"\n                  className=\"form-control\"\n                  onChange={this.addName}\n                ></input>\n              </div>\n              <div className=\"form-group\" >\n                    <label htmlFor=\"jobTitle\">Name: </label>\n                    <input\n                    type=\"text\"\n                    name=\"jobTitle\"\n                    id=\"jobTitle\"\n                    placeholder=\"enter name\"\n                    className=\"form-control\"\n                    ></input>\n\n                </div>\n                <div className=\"form-group\" >\n                    <label htmlFor=\"salary\">Name: </label>\n                    <input\n                    type=\"text\"\n                    name=\"salary\"\n                    id=\"salary\"\n                    placeholder=\"enter name\"\n                    className=\"form-control\"\n                    ></input>\n\n                </div>\n              <button type=\"submit\" className=\"btn btn-success\">\n                Save\n              </button>\n            </form>\n*/","map":{"version":3,"sources":["/home/baran/Software/Completed Works/Employee-Management-App/src/forms/AddUser.js"],"names":["React","Component","Container","Form","Card","Button","Row","InputGroup","Col","UserConsumer","axios","AddUser","state","visible","name","jobTitle","salary","changeVisibility","setState","addUser","dispatch","e","preventDefault","newUser","post","response","type","payload","data","addName","target","value","addJob","addSalary","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Container, Form, Card, Button, Row, InputGroup, Col } from \"react-bootstrap\";\nimport UserConsumer from \"../context\";\nimport axios from \"axios\";\n\nclass AddUser extends Component {\n  state = {\n    visible: true,\n    name: \"\",\n    jobTitle: \"\",\n    salary: \"\",\n  };\n\n  changeVisibility = () => {\n    this.setState({\n      visible: !this.state.visible,\n    });\n  };\n\n  addUser = async (dispatch, e) => {\n    e.preventDefault();\n    const {name,jobTitle,salary} = this.state;\n    const newUser = {\n      name,\n      jobTitle,\n      salary,\n    };\nconst response = await axios.post(\"http://localhost:3004/users\",newUser)\n\n    dispatch({\n      type: \"ADD_USER\",\n      payload: response.data,\n    });\n  };\n  addName = (e) => {\n    this.setState({ name: e.target.value });\n  };\n  addJob = (e) => {\n    this.setState({ jobTitle: e.target.value });\n  };\n  addSalary = (e) => {\n    this.setState({ salary: e.target.value });\n  };\n\n  render() {\n    return (\n      <UserConsumer>\n        {(value) => {\n          return (\n            <Container className=\"col-md-4 mt-auto\">\n            <Card className=\"text-center\">\n              <Card.Header id=\"header\">\n                <div>\n                  <Row>\n                    <div className=\"col-md-9 text-center\">\n                      <Card.Text as=\"h4\">Employee add form</Card.Text>\n                    </div>\n                    <div className=\"col-md-2\">\n                      <Button\n                        onClick={this.changeVisibility}\n                        variant=\"outline-primary\"\n                        size=\"sm\"\n                      >\n                        {this.state.visible ? \"Hide\" : \"Show\"}\n                      </Button>\n                    </div>\n                  </Row>\n                </div>\n              </Card.Header>\n              {this.state.visible ? (\n                <Card.Body>\n                  <Form onSubmit={this.addUser.bind(this, value.dispatch)}>\n                    <Form.Group\n                      value={this.state.name}\n                      onChange={this.addName}\n                      controlId=\"name\"\n                    >\n                      <Form.Label>Name : </Form.Label>\n                      <Form.Control\n                        type=\"name\"\n                        placeholder=\"Gandalf Grihamut\"\n                      />\n                      <Form.Text className=\"text-muted\">\n                        Enter the name please.\n                      </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group\n                      value={this.state.jobTitle}\n                      onChange={this.addJob}\n                      controlId=\"jobTitle\"\n                    >\n                      <Form.Label>Job : </Form.Label>\n                      <Form.Control type=\"name\" placeholder=\"White Wizard\" />\n                      <Form.Text className=\"text-muted\">\n                        Enter the job please.\n                      </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group\n                      value={this.state.salary}\n                      onChange={this.addSalary}\n                      as={Col}\n                      md=\"8\"\n                      controlId=\"salary\"\n                    >\n                      <Form.Label>Salary : </Form.Label>\n                      <InputGroup>\n                        <Form.Control\n                          type=\"number\"\n                          placeholder=\"7000\"\n                          aria-describedby=\"inputGroupPrepend\"\n                          required\n                        />\n                        <InputGroup.Prepend>\n                          <InputGroup.Text id=\"inputGroupPrepend\">\n                            USD\n                          </InputGroup.Text>\n                        </InputGroup.Prepend>\n                      </InputGroup>\n                      <Form.Text className=\"text-muted\">\n                        Enter a valid number please.\n                      </Form.Text>\n                    </Form.Group>\n                    <Button\n                      className=\"btn btn-block\"\n                      variant=\"primary\"\n                      type=\"submit\"\n                    >\n                      Save\n                    </Button>\n                  </Form>\n                </Card.Body>\n              ) : null}\n            </Card>\n            </Container>\n          );\n        }}\n      </UserConsumer>\n    );\n  }\n}\nexport default AddUser;\n\n/* <Form.Group controlId=\"salaryInput\">\n              <Form.Label>Salary : </Form.Label>\n              <Form.Control type=\"number\" placeholder=\"7000\" />\n              <Form.Text className=\"text-muted\">\n                Enter the salary name please.\n              </Form.Text>\n            </Form.Group> */\n\n/*\n            \n            \n            <Form onSubmit={this.addUser}>\n              <Form.Group controlId={this.state.name}>\n                <Form.Label>Name : </Form.Label>\n                <Form.Control type=\"name\" placeholder=\"Gandalf Grihamut\" />\n                <Form.Text className=\"text-muted\">\n                  Enter the name please.\n                </Form.Text>\n              </Form.Group>\n\n              <Form.Group controlId=\"jobTitle\">\n                <Form.Label>Job : </Form.Label>\n                <Form.Control type=\"name\" placeholder=\"White Wizard\" />\n                <Form.Text className=\"text-muted\">\n                  Enter the job please.\n                </Form.Text>\n              </Form.Group>\n\n              <Form.Group as={Col} md=\"8\" controlId=\"salary\">\n                <Form.Label>Salary : </Form.Label>\n                <InputGroup>\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"7000\"\n                    aria-describedby=\"inputGroupPrepend\"\n                    required\n                  />\n                  <InputGroup.Prepend>\n                    <InputGroup.Text id=\"inputGroupPrepend\">\n                      USD\n                    </InputGroup.Text>\n                  </InputGroup.Prepend>\n                </InputGroup>\n                <Form.Text className=\"text-muted\">\n                  Enter a valid number please.\n                </Form.Text>\n              </Form.Group>\n              <Button className=\"btn btn-block\" variant=\"primary\" type=\"submit\">\n                Save\n              </Button>\n            </Form>*/\n\n/*\n\n<form onSubmit={this.addUser} >\n              <div className=\"form-group\">\n                <label htmlFor=\"name\">Name: </label>\n                <input\n                value={this.state.name}\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  placeholder=\"enter name\"\n                  className=\"form-control\"\n                  onChange={this.addName}\n                ></input>\n              </div>\n              <div className=\"form-group\" >\n                    <label htmlFor=\"jobTitle\">Name: </label>\n                    <input\n                    type=\"text\"\n                    name=\"jobTitle\"\n                    id=\"jobTitle\"\n                    placeholder=\"enter name\"\n                    className=\"form-control\"\n                    ></input>\n\n                </div>\n                <div className=\"form-group\" >\n                    <label htmlFor=\"salary\">Name: </label>\n                    <input\n                    type=\"text\"\n                    name=\"salary\"\n                    id=\"salary\"\n                    placeholder=\"enter name\"\n                    className=\"form-control\"\n                    ></input>\n\n                </div>\n              <button type=\"submit\" className=\"btn btn-success\">\n                Save\n              </button>\n            </form>\n*/\n"]},"metadata":{},"sourceType":"module"}